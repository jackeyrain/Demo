/******************************************************************************
**
** <auto-generated>
**     This code was generated by a tool: UaModeler
**     Runtime Version: 1.6.1, using .NET Server 2.6.0 template (version 0)
**
**     Changes to this file may cause incorrect behavior and will be lost if
**     the code is regenerated.
** </auto-generated>
**
** Copyright (c) 2006-2018 Unified Automation GmbH All rights reserved.
**
** Software License Agreement ("SLA") Version 2.7
**
** Unless explicitly acquired and licensed from Licensor under another
** license, the contents of this file are subject to the Software License
** Agreement ("SLA") Version 2.7, or subsequent versions
** as allowed by the SLA, and You may not copy or use this file in either
** source code or executable form, except in compliance with the terms and
** conditions of the SLA.
**
** All software distributed under the SLA is provided strictly on an
** "AS IS" basis, WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESS OR IMPLIED,
** AND LICENSOR HEREBY DISCLAIMS ALL SUCH WARRANTIES, INCLUDING WITHOUT
** LIMITATION, ANY WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR
** PURPOSE, QUIET ENJOYMENT, OR NON-INFRINGEMENT. See the SLA for specific
** language governing rights and limitations under the SLA.
**
** Project: .NET OPC UA SDK information model for namespace http://yourorganisation.org/BuildingAutomation/
**
** Description: OPC Unified Architecture Software Development Kit.
**
** The complete license agreement can be found here:
** http://unifiedautomation.com/License/SLA/2.7/
**
** Created: 18.11.2018
**
******************************************************************************/

using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Xml;
using UnifiedAutomation.UaBase;
using UnifiedAutomation.UaServer;

namespace yourorganisztion.BA
{
    #region ControllerModel
    /// <summary>
    /// </summary>
    [UaTypeDefinition(NodeId=ObjectTypes.ControllerType, NamespaceUri=yourorganisztion.BA.Namespaces.BA)]
    public partial class ControllerModel : BaseObjectModel
    {
        #region Constructors
        /// <summary>
        /// Initializes a new instance of the <see cref="ControllerModel" /> class.
        /// </summary>
        public ControllerModel() : this((ControllerModel)null)
        {
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="ControllerModel" /> class.
        /// </summary>
        /// <param name="template">The template.</param>
        public ControllerModel(ControllerModel template) : base(template)
        {
            if (template == null)
            {
            }
            else
            {
                Status = template.Status == null ? null : template.Status.Clone() as string;
            }
        }
        #endregion

        #region Public Properties
        /// <summary>
        /// Gets or sets the Status
        /// </summary>
        [UaInstanceDeclaration(NamespaceUri = Namespaces.BA)]
        public string Status { get; set; }


        #endregion
    }
    #endregion



}
